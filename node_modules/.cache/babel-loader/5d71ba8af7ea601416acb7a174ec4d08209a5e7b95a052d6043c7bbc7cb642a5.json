{"ast":null,"code":"var _jsxFileName = \"/Users/ayoogunade/Desktop/amazon-clone/src/contexts/AdminContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminContext = /*#__PURE__*/createContext();\nexport const useAdmin = () => {\n  _s();\n  const context = useContext(AdminContext);\n  if (!context) {\n    throw new Error('useAdmin must be used within an AdminProvider');\n  }\n  return context;\n};\n_s(useAdmin, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AdminProvider = ({\n  children\n}) => {\n  _s2();\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  // Configure axios to include credentials\n  axios.defaults.withCredentials = true;\n  const checkAdminStatus = async () => {\n    try {\n      const response = await axios.get('http://localhost:5003/admin/status');\n      setIsAdmin(response.data.is_admin);\n    } catch (error) {\n      console.error('Error checking admin status:', error);\n      setIsAdmin(false);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const login = async (username, password) => {\n    try {\n      const response = await axios.post('http://localhost:5003/admin/login', {\n        username,\n        password\n      });\n      setIsAdmin(true);\n      return {\n        success: true,\n        message: response.data.message\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const message = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Login failed';\n      return {\n        success: false,\n        message\n      };\n    }\n  };\n  const logout = async () => {\n    try {\n      await axios.post('http://localhost:5003/admin/logout');\n      setIsAdmin(false);\n      return {\n        success: true\n      };\n    } catch (error) {\n      console.error('Logout error:', error);\n      setIsAdmin(false);\n      return {\n        success: false\n      };\n    }\n  };\n  useEffect(() => {\n    checkAdminStatus();\n  }, []);\n  const value = {\n    isAdmin,\n    loading,\n    login,\n    logout,\n    checkAdminStatus\n  };\n  return /*#__PURE__*/_jsxDEV(AdminContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s2(AdminProvider, \"6KDdLcDigPmSwSkIdwKPRNzyNvM=\");\n_c = AdminProvider;\nvar _c;\n$RefreshReg$(_c, \"AdminProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AdminContext","useAdmin","_s","context","Error","AdminProvider","children","_s2","isAdmin","setIsAdmin","loading","setLoading","defaults","withCredentials","checkAdminStatus","response","get","data","is_admin","error","console","login","username","password","post","success","message","_error$response","_error$response$data","logout","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ayoogunade/Desktop/amazon-clone/src/contexts/AdminContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst AdminContext = createContext();\n\nexport const useAdmin = () => {\n  const context = useContext(AdminContext);\n  if (!context) {\n    throw new Error('useAdmin must be used within an AdminProvider');\n  }\n  return context;\n};\n\nexport const AdminProvider = ({ children }) => {\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  // Configure axios to include credentials\n  axios.defaults.withCredentials = true;\n\n  const checkAdminStatus = async () => {\n    try {\n      const response = await axios.get('http://localhost:5003/admin/status');\n      setIsAdmin(response.data.is_admin);\n    } catch (error) {\n      console.error('Error checking admin status:', error);\n      setIsAdmin(false);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const login = async (username, password) => {\n    try {\n      const response = await axios.post('http://localhost:5003/admin/login', {\n        username,\n        password,\n      });\n      setIsAdmin(true);\n      return { success: true, message: response.data.message };\n    } catch (error) {\n      const message = error.response?.data?.error || 'Login failed';\n      return { success: false, message };\n    }\n  };\n\n  const logout = async () => {\n    try {\n      await axios.post('http://localhost:5003/admin/logout');\n      setIsAdmin(false);\n      return { success: true };\n    } catch (error) {\n      console.error('Logout error:', error);\n      setIsAdmin(false);\n      return { success: false };\n    }\n  };\n\n  useEffect(() => {\n    checkAdminStatus();\n  }, []);\n\n  const value = {\n    isAdmin,\n    loading,\n    login,\n    logout,\n    checkAdminStatus,\n  };\n\n  return (\n    <AdminContext.Provider value={value}>\n      {children}\n    </AdminContext.Provider>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}